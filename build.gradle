plugins {
    id 'java-library'
    id "org.sonarqube" version "3.3"
}

sonarqube {
    properties {
        property "sonar.projectKey", "data-rocks-team_schemaregistry-junit"
        property "sonar.organization", "data-rocks-team"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.scanner.force-deprecated-java-version-grace-period", "true"
        property "sonar.coverage.exclusions", "**/schemaregistry-junit-test/**"
    }
}

allprojects {
    repositories {
        jcenter()
        // Add Confluent maven repo for Confluent dependencies
        maven {
            url "https://packages.confluent.io/maven/"
        }
        // Required for com.github.everit-org.json-schema:org.everit.json.schema:
        maven {
            url "https://jitpack.io"
        }
    }
}

ext {
    apacheCuratorVersion = '5.2.0'
    assertjVersion = '3.21.2'
    confluentVersion = '7.0.0'
    kafkaJunitVersion = '3.2.3'
    jsonSchemaVersion = '1.12.1'
    junit4Version = '4.13.2'
    junitJupiterVersion = '5.8.1'
    lombokVersion = '1.18.22'
    protobufVersion = '3.19.1'
    slf4jVersion = '1.7.32'
    testcontainersVersion = '1.16.2'
}

subprojects {

    // Every module is a Java library
    apply plugin: 'java-library'

    // Checkstyle
    apply from: "$rootProject.projectDir/checkstyle.gradle"

    // PMD
    apply from: "$rootProject.projectDir/pmd.gradle"

    // Specific Junit configuration
    apply from: "$rootProject.projectDir/junit.gradle"

    dependencies {
        // Lombok configuration
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testImplementation "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

        implementation "org.slf4j:slf4j-api:$slf4jVersion"
        implementation "org.slf4j:slf4j-simple:$slf4jVersion"

        testImplementation "org.assertj:assertj-core:$assertjVersion"
    }

    // Jacoco
    apply from: "$rootProject.projectDir/jacoco.gradle"

    // Keep Java8 compatibility
    apply from: "$rootProject.projectDir/keep-java8-compatibility.gradle"
}

task setDependenciesForExample {
    group 'Configure Example'
    description 'Set dependencies for example using centralised ext variables'
    doLast {
        fileTree("examples")
            .filter { it.isFile() }
            .filter { it.name == 'build.gradle' }
            .files
            .path
            .each {file ->
                File buildGradle = new File(file)
                String content = buildGradle.text

                project.ext.properties
                    .each{ k, v ->
                        content = content.replaceAll("$k = 'PLACEHOLDER'", "$k = '$v'")}

                buildGradle.write(content)
            }
    }
}

task setDependenciesForRegressionTesting {
    group 'Configure Regression Testing'
    description 'Set dependencies for regression testing using centralised ext variables'
    doLast {
        fileTree("regression-test")
                .filter { it.isFile() }
                .filter { it.name == 'build.gradle' }
                .files
                .path
                .each {file ->
                    File buildGradle = new File(file)
                    String content = buildGradle.text

                    project.ext.properties
                            .each{ k, v ->
                                content = content.replaceAll("$k = 'PLACEHOLDER'", "$k = '$v'")}

                    buildGradle.write(content)
                }
    }
}
