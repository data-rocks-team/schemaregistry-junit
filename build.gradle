plugins {
    id 'java-library'
    id "org.sonarqube" version "3.0"
}

sonarqube {
    properties {
        property "sonar.projectKey", "data-rocks-team_schemaregistry-junit"
        property "sonar.organization", "data-rocks-team"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.scanner.force-deprecated-java-version", "true"
        property "sonar.coverage.exclusions", "**/schemaregistry-junit-test/**"
    }
}

allprojects {
    repositories {
        jcenter()
        // Add Confluent maven repo for Confluent dependencies
        maven {
            url "http://packages.confluent.io/maven/"
        }
        // Required for com.github.everit-org.json-schema:org.everit.json.schema:
        maven {
            url "https://jitpack.io"
        }
    }
}

subprojects {

    // Define a context variable that can be reused inside the others gradle files applied via
    // `apply from: <FILE>`
    ext.currentProject=it

    // Every module is a Java library
    apply plugin: 'java-library'

    // Checkstyle
    apply from: "$rootProject.projectDir/checkstyle.gradle"

    // PMD
    apply from: "$rootProject.projectDir/pmd.gradle"

    // Specific Junit configuration
    apply from: "$rootProject.projectDir/junit.gradle"

    dependencies {
        // Lombok configuration
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testImplementation "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

        implementation "org.slf4j:slf4j-api:$slf4jVersion"
        implementation "org.slf4j:slf4j-simple:$slf4jVersion"

        testImplementation "org.assertj:assertj-core:$assertjVersion"
    }

    // Jacoco
    apply from: "$rootProject.projectDir/jacoco.gradle"

    // Add flag to run specific group of tests
    apply from: "$rootProject.projectDir/on-off-test.gradle"
}
